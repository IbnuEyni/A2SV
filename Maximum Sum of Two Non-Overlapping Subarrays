class Solution(object):
    def maxSumTwoNoOverlap(self, nums, firstLen, secondLen):
        sums = [0] * (len(nums) + 1)
        maxLval = 0
        maxRval = 0
        result = 0
        i = 1
        while (i <= len(nums)) :
            sums[i] = nums[i - 1] + sums[i - 1]
            i += 1
        i = firstLen
        while (i <= len(nums) - secondLen) :
            currLVal = sums[i] - sums[i - firstLen]
            currMVal = sums[i + secondLen] - sums[i]
            maxLval = max(maxLval,currLVal)
            result = max(result,currMVal + maxLval)
            i += 1
        i = secondLen
        while (i <= len(nums) - firstLen) :
            currMVal = sums[i] - sums[i - secondLen]
            currLVal = sums[i + firstLen] - sums[i]
            maxRval = max(maxRval,currMVal)
            result = max(result,currLVal + maxRval)
            i += 1
        return result
